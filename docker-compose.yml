services:
  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: interview_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root123456
      MYSQL_DATABASE: interview_system
      MYSQL_USER: interview_user
      MYSQL_PASSWORD: interview_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - interview_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: interview_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - interview_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # NestJS 后端
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: interview_backend
    restart: always
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      DATABASE_HOST: mysql
      DATABASE_PORT: 3306
      DATABASE_USER: interview_user
      DATABASE_PASSWORD: interview_pass
      DATABASE_NAME: interview_system
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 7d
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - interview_network
    volumes:
      - ./backend/uploads:/app/uploads

  # Next.js 前端
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: interview_frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://localhost:3001
    depends_on:
      - backend
    networks:
      - interview_network

volumes:
  mysql_data:
  redis_data:

networks:
  interview_network:
    driver: bridge

